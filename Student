
public class Student implements Comparable{
	
	private String first;
	private String last;
	
	public Student(String f, String l)
	{
		first = f;
		last = l;
	}

	/**
	Returns the students first name
	@param none
	@return String the first name
	@pre none
	@post none
	*/
	public String getFirst()
	{
		return first;
	}
	
	/**
	Returns the students last name
	@param none
	@return String the last name
	@pre none
	@post none
	*/
	public String getLast()
	{
		 return last;
	}
	
	/**
	Tests if two students are the same
	@param other the student to be compared
	@return boolean that shows whether the students are the same
	@pre none
	@post none
	*/
	public boolean equals(Object other)
	{
		if (other instanceof Student)
		{
			Student o = (Student)other;
			if (this.hashCode() == o.hashCode()){
				return true;
			}
		}
		return false;
	}
	
	/**
	Compares two students by numeric value
	@param other the student to be compared
	@return int that represents the numerical difference between the first and second student
	@pre other is actually a student
	@post none
	*/
	public int compareTo(Object other)
	{
		Student comparing;
		try{
			comparing = (Student)other;
		} catch (ClassCastException e){
			System.out.println("You can't try to add a non-student to this tree");
			return -5;
		}
		String thisName = last+first;
		String otherName = comparing.getLast() + comparing.getFirst();
		return (thisName.compareTo(otherName));
		
	}
	
	/**
	Returns the objects values as a string
	@param none
	@return String that shows object data
	@pre none
	@post none
	*/
	public String toString(){
		return (first + " " + last + " ");
	}

}
